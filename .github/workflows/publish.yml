name: publish

on:
  release:
    types: [ published ]

permissions:
  pull-requests: write
  contents: write

env:
  RUST_VERSION: "stable"
  BIN_NAME: "uv-migrator"
  # OS SUPPORT
  MACOS_VERSION: macos-13
  LINUX_VERSION: ubuntu-22.04
  WINDOWS_VERSION: windows-2022

jobs:
  build:
    name: Build - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        include:
          # Arm
          - target: aarch64-unknown-linux-gnu
            os: ${{ LINUX_VERSION }}
          - target: aarch64-unknown-linux-musl
            os: ${{ LINUX_VERSION }}
          - target: aarch64-apple-darwin
            os: ${{ MACOS_VERSION }}
          - target: aarch64-pc-windows-msvc
            os: ${{WINDOWS_VERSION}}
          # x86
          - target: x86_64-unknown-linux-gnu
            os: ${{ LINUX_VERSION }}
          - target: x86_64-unknown-linux-musl
            os: ${{ LINUX_VERSION }}
          - target: x86_64-apple-darwin
            os: ${{ MACOS_VERSION }}
          - target: x86_64-pc-windows-msvc
            os: ${{WINDOWS_VERSION}}

    steps:
      - name: Checkout Git repo
        uses: actions/checkout@v4

      - name: Install rust toolchain
        if: ${{ !contains(matrix.platform.target, 'apple') }}
        uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu') && !contains(matrix.target, '-musl')

      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')

      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{BIN_NAME}}
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}